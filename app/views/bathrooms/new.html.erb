<%=javascript_include_tag :defaults %>
<script type="text/javascript"
        src="http://maps.google.com/maps/api/js?sensor=true">
</script>
<script language="JavaScript" src="http://j.maxmind.com/app/geoip.js"></script>
<script type="text/javascript" language="javascript">
  // variables used by google map and geocoding
  var your_city = new google.maps.LatLng(geoip_latitude(), geoip_longitude()); //central map location, default value is based on ip address
  var marker; //marker location
  var map; //map object
  var geocoder = new google.maps.Geocoder(); //geocoder used for calculating lat/lng and address
  //onload
  google.maps.event.addDomListener(window, "load", initialize);
  
  //initialize map
  function initialize() {
    var mapOptions = {
      zoom: 15,
      mapTypeId: google.maps.MapTypeId.ROADMAP,
      center: your_city
    };
    map = new google.maps.Map(document.getElementById("map_add"),
    mapOptions);
	//initialize marker
	marker = new google.maps.Marker({
	  map:map,
	  draggable:true,
	  animation: google.maps.Animation.DROP,
	  position: your_city
	});
	google.maps.event.addListener(marker, 'dragend', updateAddress);
  }
  //use geocoder to get the gps coordinate using address
  function getGPS()
  {
	var address = document.getElementById("street").value+", "
				+document.getElementById("city").value+", "
				+document.getElementById("state").value+", "
				+document.getElementById("zip").value+", "
				+document.getElementById("country").value;
	//alert(address);
	geocoder.geocode({"address":address}, markMap);
  }	
  //mark the map after receiving gps coordinates
  function markMap(results, status)
  {
	if(status == google.maps.GeocoderStatus.OK)
	{
		your_city = results[0].geometry.location;
		map.setCenter(your_city);
		map.setZoom(15);
		marker.setPosition(your_city);
		google.maps.event.addListener(marker, 'dragend', updateAddress);
		//document.getELementById("add").disabled = false;
	}
	else
	{
		alert("Geocode failed because: "+status);
	}
  }
  //update the new marker position before saving to database
  function save_gps()
  {
		your_city = marker.getPosition();
		document.getElementById("lat").value = your_city.lat();
		document.getElementById("long").value = your_city.lng();  
  }
  
  //update the address after user move the marker on the map
  function updateAddress() {
	geocoder.geocode({'latLng':marker.getPosition()}, function(results, status) {
		if (status == google.maps.GeocoderStatus.OK) {
			document.getElementById("street").value = getAddressComponent(results[0], "street_number")+" "+getAddressComponent(results[0], "route");
			document.getElementById("city").value = getAddressComponent(results[0], "locality");
			document.getElementById("state").value = getAddressComponent(results[0], "administrative_area_level_1");
			document.getElementById("zip").value = getAddressComponent(results[0], "postal_code")
			document.getElementById("country").value = getAddressComponent(results[0], "country")
		}
		else {
			alert("Geocoder failed because:" + status);
		}
	});
  }
  //look through the GeocoderResult object to find the correct info for each field in address
  function getAddressComponent(address, type) {
	for (var i=0; i<address.address_components.length; i++) {
		for (var j=0; j<address.address_components[i].types.length; j++) {
			if (address.address_components[i].types[j] == type) {
				return address.address_components[i].long_name;
			}
		}
	}
  }
</script>

<h1>Add New Bathroom</h1>

<%= form_for @bathroom, :url => bathrooms_url,:html => {:multipart => true} do |f| %>
    <%= f.error_messages %>

    <h3>Basic Information</h3>
    <%= f.label :title %><br />
    <%= f.text_field :title %><br />
    <br/>

    <%= f.label :gender %><br />
    <%= select("bathroom", "gender", %w[Male Female], {}, {:include_blank => true}) %><br />
    <br/>

    <%= f.label :description %><br />
    <%= f.text_area :description %><br />

    <h3>Address</h3>
    <%= f.fields_for :address do |a| %>
        <%= a.label :inside_location %><br />
        <%= a.text_field :inside_location, :id => "inside" %><br />
        <%= a.label :street_address %><br />
        <%= a.text_field :street_address, :id => "street" %><br />
        <%= a.label :city %><br />
        <%= a.text_field :city, :id => "city" %><br />
        <%= a.label :state %><br />
        <%= a.text_field :state, :id => "state" %><br />
        <%= a.label :zip %><br />
        <%= a.text_field :zip, :id => "zip" %><br />
        <%= a.label :country %><br />
        <%= a.text_field :country, :id => "country" %><br />
		<%= a.hidden_field :latitude, :id => "lat" %><br />
		<%= a.hidden_field :longitude, :id => "long" %><br />
    <% end %>
	
	<button type="button" onclick="getGPS(this)">Check Address</button>
	<div id="mapbox_add">
		<div id="map_add">
		</div>
	</div>
    <h3>Details</h3>
    <table>
    <tr>
        <th>Attribute</th>
        <th>Value</th>
    </tr>
    <%= f.fields_for :bathroom_specs do |spec| %>
      <tr>
        <td><%= spec.text_field :key %></td>
        <td><%= spec.text_field :value %></td>
      </tr>
    <% end %>
    </table>

    <h3>Photos</h3>
    <h4>You can upload photos now or after you create the bathroom.</h4>
    <%= f.fields_for :photos do |photo| %>
        <%= photo.file_field :image %><br />
    <% end %>

    <br/>



    <%= f.submit "Add", :onclick =>"save_gps()"%>
<% end %>

<br />

<%= link_to 'Back All Bathrooms', bathrooms_path %>
